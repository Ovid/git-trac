#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;
use lib 'lib';
use Pod::Usage;
use Getopt::Long;

our $VERSION = '0.01';

my %commands = ( # yeah, this could be cleaned up, too
    tickets => sub { say shift->tickets_to_string },
    tasks   => sub { say shift->tasks_to_string },
    start   => sub { shift->start_task(@_) },
    switch  => sub { say shift->switch_task(@_) },
    commit  => sub { shift->commit(@_) },
    delete  => sub { shift->delete(@_) },
);
my ( $command, @args );

for my $i ( 0 .. $#ARGV ) {

    # this is because something like 'git trac commit -m "some message"' will
    # cause issues and I don't want an artificial syntax here
    if ( exists $commands{ $ARGV[$i] } ) {
        ( $command, @args ) = splice @ARGV, $i;
        last;
    }
}

GetOptions(
    'help|?'  => sub { pod2usage( -verbose => 1 ) },
    'man'     => sub { pod2usage( -verbose => 2 ) },
    'refresh' => \my $refresh,
    'version' => \my $version,
) or die "Bad Options";

if ( $version ) {
    say "git-trac version $Git::Trac::VERSION";
    exit 0;
}

if ($refresh) {
    $command //= 'list';
}

use Git::Trac;
my $trac = Git::Trac->new( refresh => $refresh );

if ($command) {
    my $action = $commands{$command}
      or die "Unkown command '$command'";

    $action->( $trac, @args );
}
else {
    say "No command given";
    pod2usage( -verbose => 1 );
    exit 1;
}

__END__

=head1 NAME

git-trac - Manage your trac tickets with git.

=head1 VERSION

0.01

=head1 SYNOPSIS

    git trac [--help|-?]
    git trac [--man]
    git trac [--refresh] COMMAND ARGS

Options:

    --help,-h,-?     Brief help message
    --man,-m         Long help message
    --refresh,-r     Force a refresh of Trac tickets
    --version,-v     Print version of Git::Trac

Commands:

    tickets                      List open tickets
    tasks                        List tasks
    start  $number $branch_name  Start working on ticket $number in branch $branch_name
    switch $number               Switch to already started task $number
    commit $message              Commit a change with $message, posting the message to Trac
    delete $number               Will delete the task (but not the branch)

=head1 DESCRIPTION

Eventually we'll have something here
